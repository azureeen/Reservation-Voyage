<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Welcome!{% endblock %}</title>
    <link rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
    {% endblock %}
</head>
<body class="bg-gray-900 text-white">
{% block header %}
    <header class="bg-black text-gray-100 py-4 shadow-lg">
        <div class="max-w-7xl mx-auto px-4 flex justify-between items-center">
            <h1 class="text-xl font-bold">Luxury Travel</h1>
            <nav>
                <ul class="flex space-x-4">
                    <li class="hover:text-gold-500"><a href="{{ path('home') }}">Home</a></li>
                    <li class="hover:text-gold-500"><a href="#">Explore</a></li>
                    <li class="hover:text-gold-500"><a href="#best-deals">Best Deals</a></li>
                    <li class="hover:text-gold-500"><a href="#">Reviews</a></li>
                    <li class="hover:text-gold-500"><a href="{{ path('logout') }}">Log out</a></li>
                </ul>
            </nav>
        </div>
    </header>
{% endblock %}

<main>
    {% block body %}{% endblock %}
</main>

<footer class="bg-black py-4 mt-8">
    <p class="text-center text-sm">&copy; {{ 'now'|date('Y') }} Luxury Travel. All rights reserved.</p>
</footer>

{% block javascripts %}
    {{ encore_entry_script_tags('app') }}
{% endblock %}

<!-- Toast Container -->
<div id="toast-container" class="fixed bottom-5 right-5 z-50"></div>

<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        // Function to create toast
        function createToast(message, type) {
            const toastContainer = document.getElementById('toast-container');
            const toast = document.createElement('div');
            toast.className = `flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 rounded-lg shadow ${type === 'error' ? 'bg-red-500 text-white' : type === 'success' ? 'bg-green-500 text-white' : 'bg-gray-800 text-white'}`;
            toast.innerHTML = `
                    <div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 ${type === 'error' ? 'bg-red-100 text-red-500' : type === 'success' ? 'bg-green-100 text-green-500' : 'bg-gray-100 text-gray-500'} rounded-lg dark:bg-${type === 'error' ? 'red-800' : type === 'success' ? 'green-800' : 'gray-800'} dark:text-${type === 'error' ? 'red-200' : type === 'success' ? 'green-200' : 'gray-200'}">
                        <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.147 15.085a7.159 7.159 0 0 1-6.189 3.307A6.713 6.713 0 0 1 3.1 15.444c-2.679-4.513.287-8.737.888-9.548A4.373 4.373 0 0 0 5 1.608c1.287.953 6.445 3.218 5.537 10.5 1.5-1.122 2.706-3.01 2.853-6.14 1.433 1.049 3.993 5.395 1.757 9.117Z"/>
                        </svg>
                        <span class="sr-only">Icon</span>
                    </div>
                    <div class="ms-3 text-sm text-gray-50 font-normal">${message}</div>
                `;
            toastContainer.appendChild(toast);

            // Automatically dismiss the toast after 5 seconds
            setTimeout(() => {
                dismissToast(toast);
            }, 5000);
        }

        // Function to dismiss toast
        function dismissToast(toast) {
            toast.classList.add('opacity-0', 'transition-opacity', 'duration-300');
            setTimeout(() => {
                toast.remove();
            }, 300);
        }

        // Create toasts for each flash message
        {% for label, messages in app.flashes %}
        {% for message in messages %}
        createToast("{{ message }}", "{{ label }}");
        {% endfor %}
        {% endfor %}
    });
</script>
</body>
</html>
